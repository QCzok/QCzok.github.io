{"version":3,"sources":["constants/apiConstants.js","components/Header.js","utils/network.js","components/Dialogs/LoginForm.js","components/Dialogs/RegistrationForm.js","components/Dialogs/UploadDialog.js","components/Song.js","components/Playlist.js","components/Dialogs/CreatePlaylistDialog.js","components/MusicCollection.js","components/Player.js","utils/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["API_BASE_URL","ACCESS_TOKEN_NAME","withRouter","props","deleteUser","a","axios","post","headers","localStorage","getItem","catch","error","console","log","className","data-toggle","aria-haspopup","aria-expanded","xmlns","width","height","fill","viewBox","d","aria-labelledby","onClick","removeItem","history","push","Promise","resolve","playlistID","then","cookies","Cookies","remove","path","secure","window","location","reload","href","addSongPost","playlistName","songName","selectedFile","data","FormData","append","response","status","affected","deleteSongPost","songID","addPlaylistPost","name","deletePlaylistPost","loadMusicCollectionGet","get","res","registrationToServerPost","payload","isOk","message","loginPost","useState","email","password","successMessage","errorMessage","state","setState","handleChange","e","target","id","value","prevState","redirectToHome","Modal","show","onHide","animation","Header","closeButton","Body","type","aria-describedby","placeholder","onChange","Button","preventDefault","setItem","alert","Footer","class","role","confirmPassword","onSend","sendDetailsToServer","length","disabled","UploadDialog","open","setOpen","setSongName","setSelectedFile","Fragment","Form","Group","File","event","files","parentCallback","Song","result","updateCurrentSong","undefined","Playlist","songCollection","fetchInProgress","setFetchInProgress","Accordion","map","song","_id","Toggle","as","eventKey","Collapse","CreatePlaylistDialog","setPlaylistName","MusicCollection","musicCollection","user","setUser","useEffect","onSongChange","playlist","songList","listOfPlaylists","Player","onAudioLoad","audioCtx","AudioContext","audio","document","getElementById","audioSourceNode","createMediaElementSource","analyserNode","createAnalyser","fftSize","bufferLength","frequencyBinCount","dataArray","Float32Array","connect","destination","onTimeUpdateHandler","requestAnimationFrame","getFloatFrequencyData","canvasCtx","fillStyle","fillRect","canvas","barWidth","posX","i","barHeight","bind","this","getContext","currentSongName","controls","crossorigin","src","currentSongID","React","Component","PrivateRoute","children","rest","render","App","setCurrentSongID","setCurrentSongName","set","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.5818cb43.chunk.js","sourcesContent":["// export const API_BASE_URL = process.env.REACT_APP_SERVER_URL;\nexport const API_BASE_URL = 'https://soundtrackbox.herokuapp.com';\nexport const ACCESS_TOKEN_NAME = 'login_access_token';\nexport const CURRENT_SONG_NAME = null;\nexport const CURRENT_SONG_ID = null;","import { withRouter } from \"react-router-dom\";\nimport { ACCESS_TOKEN_NAME } from '../constants/apiConstants';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../constants/apiConstants'\nimport Cookies from 'universal-cookie';\n\nconst Header = (props) => {\n\n    const onSelection = () => {\n        if (localStorage.getItem(ACCESS_TOKEN_NAME)) {\n            localStorage.removeItem(ACCESS_TOKEN_NAME);\n            props.history.push('/');\n        } else {\n            props.history.push('/login');\n        }\n    }\n\n    const onAccountDeletion = () => {\n        Promise.resolve(deleteUser(props.playlistID)).then(() => {\n            localStorage.removeItem(ACCESS_TOKEN_NAME);\n            const cookies = new Cookies();\n            cookies.remove('songName', { path: '/', secure: true });\n            cookies.remove('songID', { path: '/', secure: true });\n            window.location.reload();\n        }\n        );\n    }\n\n    const deleteUser = async () => {\n        return axios.post(API_BASE_URL + '/user/deleteUser', {}, { headers: { \"auth-token\": localStorage.getItem(ACCESS_TOKEN_NAME) } })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    return (\n        <nav className=\"navbar text-white bg-dark flex-fill\">\n            <div className=\"nav-item dropdown\">\n                <a className=\"dropdown-toggle\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"26\" height=\"26\"\n                        fill={localStorage.getItem(ACCESS_TOKEN_NAME) ? \"orange\" : \"currentColor\"}\n                        className=\"bi bi-file-person-fill\"\n                        viewBox=\"0 0 16 16\">\n                        <path d=\"M12 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm-1 7a3 3 0 1 1-6 0 3 3 0 0 1 6 0zm-3 4c2.623 0 4.146.826 5 1.755V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-1.245C3.854 11.825 5.377 11 8 11z\" />\n                    </svg>\n                </a>\n                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                    <a className=\"dropdown-item\" onClick={onSelection}>{localStorage.getItem(ACCESS_TOKEN_NAME) ? 'Logout' : 'Login'}</a>\n                    <a className={localStorage.getItem(ACCESS_TOKEN_NAME) ? 'dropdown-item' : ''} onClick={onAccountDeletion} href=\"#\">{localStorage.getItem(ACCESS_TOKEN_NAME) ? 'Delete account' : ''}</a>\n                </div>\n            </div>\n            <h5>Sound Track Box</h5>\n        </nav>\n    );\n}\n\nexport default withRouter(Header);","import axios from 'axios';\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from '../constants/apiConstants';\n\n//https://reactjs.org/docs/code-splitting.html\nexport const addSongPost = async (playlistName, playlistID, songName, selectedFile) => {\n\n    const data = new FormData()\n    data.append('playlistName', playlistName);\n    data.append('playlistID', playlistID);\n    data.append('songName', songName);\n    data.append('track', selectedFile);\n\n    return axios.post(API_BASE_URL + '/media/addSong', data, { headers: { \"auth-token\": localStorage.getItem(ACCESS_TOKEN_NAME) } })\n        .then(function (response) {\n            if (response.status === 200) {\n                return response.data.affected;\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n}\n\nexport const deleteSongPost = async (playlistID, songID) => {\n    return axios.post(API_BASE_URL + '/media/deleteSong', { playlistID: playlistID, songID: songID }, { headers: { \"auth-token\": localStorage.getItem(ACCESS_TOKEN_NAME) } })\n        .then(function (response) {\n            if (response.status === 200) {\n                return response.data.affected;\n            }\n        }\n        )\n        .catch(function (error) {\n            console.log(error);\n        })\n}\n\nexport const addPlaylistPost = async (playlistName) => {\n    return axios.post(API_BASE_URL + '/media/addPlaylist', { name: playlistName }, { headers: { \"auth-token\": localStorage.getItem(ACCESS_TOKEN_NAME) } })\n        .then(function (response) {\n            if (response.status === 200) {\n                return response.data.affected;\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\n\nexport const deletePlaylistPost = async (playlistID) => {\n    return axios.post(API_BASE_URL + '/media/deletePlaylist', { playlistID: playlistID }, { headers: { \"auth-token\": localStorage.getItem(ACCESS_TOKEN_NAME) } })\n        .then(function (response) {\n            if (response.status === 200) {\n                return response.data.affected;\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n}\n\nexport const loadMusicCollectionGet = async () => {\n    var data = axios.get(API_BASE_URL + '/media/loadMusicCollection', { headers: { \"auth-token\": localStorage.getItem(ACCESS_TOKEN_NAME) } })\n        .then(res => { return res.data }).catch(function (error) {\n            console.log(error);\n        })\n    return data;\n}\n\nexport const registrationToServerPost = async (payload) => {\n    return axios.post(API_BASE_URL + '/user/register', payload)\n        .then((response) => {\n            if (response.status === 200) {\n                return { isOk: true, message: \"\" };\n            } else {\n                return { isOk: false, message: response.data };\n            }\n        })\n        .catch(function (error) {\n            return { isOk: false, message: error.response.data };\n        });\n}\n\nexport const loginPost = async (payload) => {\n    return axios.post(API_BASE_URL + '/user/login', payload)\n        .then(response => {\n            return response;\n        })\n        .catch(error => {\n            throw(error);\n        });\n}","import React, { useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nimport { ACCESS_TOKEN_NAME } from '../../constants/apiConstants';\nimport { loginPost } from '../../utils/network.js';\n\nfunction LoginForm(props) {\n    const [state, setState] = useState({\n        email: \"\",\n        password: \"\",\n        successMessage: null,\n        errorMessage: null,\n    })\n\n    const handleChange = (e) => {\n        const { id, value } = e.target\n        setState(prevState => ({\n            ...prevState,\n            [id]: value\n        }))\n    }\n\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        const payload = {\n            \"email\": state.email,\n            \"password\": state.password,\n        }\n\n        Promise.resolve(loginPost(payload))\n        .then((response) => {\n            if (response.status < 400) {\n                setState(prevState => ({\n                    ...prevState,\n                    'successMessage': 'Login successful. Redirecting to home page..'\n                }))\n                localStorage.setItem(ACCESS_TOKEN_NAME, response.data);\n                redirectToHome();\n            }\n            else {\n                setState(prevState => ({\n                    ...prevState,\n                    'errorMessage': response.data,\n                }))\n            }\n        })\n        .catch((error) => {\n            if (!error.response) {\n                alert('NETWORK ERROR');\n            } else {\n                setState(prevState => ({\n                    ...prevState,\n                    'errorMessage': error.response.data\n                }))\n            }\n        });\n    }\n\n    const redirectToHome = () => {\n        props.history.push('/');\n    }\n    const redirectToRegister = () => {\n        props.history.push('/register');\n    }\n    return (\n        <Modal show={true} onHide={() => redirectToHome()} animation={false}>\n            <Modal.Header closeButton>\n                Login\n                </Modal.Header>\n            <Modal.Body>\n                <form>\n                    <div className=\"form-group text-left\">\n                        <label >Email address</label>\n                        <input type=\"email\"\n                            className=\"form-control\"\n                            id=\"email\"\n                            aria-describedby=\"emailHelp\"\n                            placeholder=\"Enter email\"\n                            value={state.email}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"form-group text-left\">\n                        <label>Password</label>\n                        <input type=\"password\"\n                            className=\"form-control\"\n                            id=\"password\"\n                            placeholder=\"Password\"\n                            value={state.password}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"form-check\">\n                    </div>\n                </form>\n                <Button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                    onClick={handleSubmitClick}\n                >Submit</Button>\n            </Modal.Body>\n            <Modal.Footer>\n                <section className=\"registerMessage\">\n                    <span>Dont have an account? </span>\n                    <button className=\"btn btn-primary\" onClick={() => redirectToRegister()}>Register</button>\n                </section>\n                <section class={state.errorMessage ? \"alert alert-danger\": \"\"} role=\"alert\">\n                {state.errorMessage}\n                </section>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default withRouter(LoginForm);","import React, { useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Modal from 'react-bootstrap/Modal';\nimport { registrationToServerPost } from '../../utils/network.js';\n\nconst RegistrationForm = (props) => {\n    const [state, setState] = useState({\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        errorMessage: null,\n        successMessage: null,\n        onSend: false,\n    })\n    const handleChange = (e) => {\n        const { id, value } = e.target\n        setState(prevState => ({\n            ...prevState,\n            [id]: value\n        }))\n    }\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        if (state.password === state.confirmPassword) {\n            setState(prevState => ({\n                ...prevState,\n                'onSend': true,\n            }));\n            Promise.resolve()\n                .then(sendDetailsToServer)\n                .catch(error => console.log(error));\n        } else {\n            setState(prevState => ({\n                ...prevState,\n                'errorMessage': 'Passwords do not match'\n            }))\n        }\n    }\n\n    const redirectToHome = () => {\n        props.history.push('/home');\n    }\n\n    const redirectToLogin = () => {\n        props.history.push('/login');\n    }\n\n    const sendDetailsToServer = () => {\n        if (state.email.length && state.password.length) {\n            const payload = {\n                \"email\": state.email,\n                \"password\": state.password,\n            }\n            Promise.resolve(registrationToServerPost(payload)).then((response) => {\n                if (response.isOk) {\n                    setState(prevState => ({\n                        ...prevState,\n                        'successMessage': \"You have successfully registered. We just sent you a confirmation email. Check your email account to finish the registration process and access your free trial period. If you don't receive it in a few minutes, check your spam folder.\",\n                        'errorMessage': null,\n                    }))\n                } else {\n                    setState(prevState => ({\n                        ...prevState,\n                        'errorMessage': response.message,\n                        'successMessage': null,\n                        'onSend': false,\n                    }))\n                }\n            })\n        } else {\n            setState(prevState => ({\n                ...prevState,\n                'errorMessage': 'Please enter valid username and password',\n                'successMessage': null,\n            }))\n        }\n    }\n\n    return (\n        <div>\n            <Modal show={true} onHide={redirectToHome} animation={false}>\n                <Modal.Header closeButton>\n                    Register\n                </Modal.Header>\n                <Modal.Body>\n                    <form>\n                        <div className=\"form-group text-left\">\n                            <label>Email address</label>\n                            <input type=\"email\"\n                                className=\"form-control\"\n                                id=\"email\"\n                                aria-describedby=\"emailHelp\"\n                                placeholder=\"Enter email\"\n                                value={state.email}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"form-group text-left\">\n                            <label>Password</label>\n                            <input type=\"password\"\n                                className=\"form-control\"\n                                id=\"password\"\n                                placeholder=\"Password\"\n                                value={state.password}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"form-group text-left\">\n                            <label>Confirm Password</label>\n                            <input type=\"password\"\n                                className=\"form-control\"\n                                id=\"confirmPassword\"\n                                placeholder=\"Confirm Password\"\n                                value={state.confirmPassword}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary\"\n                            onClick={handleSubmitClick}\n                            disabled={state.onSend ? \"true\" : \"\"}\n                        >\n                            Register\n                </button>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <div className=\"mt-2\">\n                        <span>Already have an account? </span>\n                        <button className=\"btn btn-primary\" onClick={redirectToLogin}>Login here</button>\n                    </div>\n                    <section class={state.errorMessage ? \"alert alert-danger\" : \"\"} role=\"alert\">\n                        {state.errorMessage}\n                    </section>\n                    <section class={state.successMessage ? \"alert alert-success\" : \"\"} role=\"alert\">\n                        {state.successMessage}\n                    </section>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default withRouter(RegistrationForm);","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst UploadDialog = (props) => {\n  const [open, setOpen] = useState(false);\n  const [songName, setSongName] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleNameChange = (event) => {\n    setSongName(event.target.value)\n  };\n\n  const handleDialogOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setOpen(false);\n    setSongName(\"\");\n  };\n\n  const handleDialogSubmit = () => {\n    if (songName !== \"\") {\n      props.parentCallback(songName, selectedFile);\n      setOpen(false);\n      setSongName(\"\");\n    } else {\n      alert(\"You didn't give your song any name\");\n    }\n  };\n\n  const onFileUpload = (event) => {\n    setSelectedFile(event.target.files[0]);\n  }\n\n  return (\n    <React.Fragment>\n      <a className=\"dropdown-item\" onClick={handleDialogOpen}>Add a song</a>\n\n      <Modal show={open} onHide={handleDialogClose} animation={false}>\n        <Modal.Header closeButton>\n          Upload a Song\n        </Modal.Header>\n        <Modal.Body>\n          <form>\n            <Form.Group>\n              <Form.File onChange={onFileUpload} />\n            </Form.Group>\n            <div className=\"form-group text-left\">\n              <label >Song name</label>\n              <input type=\"song-name\"\n                className=\"form-control\"\n                id=\"playlist\"\n                aria-describedby=\"song name\"\n                placeholder=\"Enter a song name\"\n                value={songName}\n                onChange={handleNameChange}\n              />\n            </div>\n          </form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={handleDialogSubmit}\n          >Submit</Button>\n        </Modal.Footer>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nexport default UploadDialog","import React from 'react';\nimport Cookies from 'universal-cookie';\nimport { deleteSongPost } from '../utils/network.js';\n\nconst Song = (props) => {\n\n    const deleteSong = () => {\n        const cookies = new Cookies();\n        Promise.resolve(deleteSongPost(props.playlistID, props.songID)).then((result) => props.parentCallback(result));\n        if (cookies.get('songID') === props.songID) {\n            props.updateCurrentSong(undefined, undefined);\n        }\n    }\n\n    const handleOnClick = () => {\n        props.updateCurrentSong(props.songName, props.songID)\n    }\n\n        return (\n            <div className=\"row\">\n                <div id=\"delete-song\" className=\"nav-item dropdown\">\n                    <a className=\"dropdown-toggle\"\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-file-music-fill\" viewBox=\"0 0 16 16\">\n                            <path d=\"M12 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm-.5 4.11v1.8l-2.5.5v5.09c0 .495-.301.883-.662 1.123C7.974 12.866 7.499 13 7 13c-.5 0-.974-.134-1.338-.377-.36-.24-.662-.628-.662-1.123s.301-.883.662-1.123C6.026 10.134 6.501 10 7 10c.356 0 .7.068 1 .196V4.41a1 1 0 0 1 .804-.98l1.5-.3a1 1 0 0 1 1.196.98z\" />\n                        </svg>\n                    </a>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                        <a className=\"dropdown-item\" onClick={deleteSong}>Delete this song</a>\n                    </div>\n                </div>\n                <button className=\"btn flex-fill\" onClick={handleOnClick}>{props.songName}</button>\n            </div>\n        );\n}\n\nexport default Song;","import React, { useState } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport Cookies from 'universal-cookie';\n\nimport UploadDialog from './Dialogs/UploadDialog';\nimport Song from './Song';\nimport { addSongPost, deletePlaylistPost } from '../utils/network.js';\n\n\nconst Playlist = (props) => {\n    const [fetchInProgress, setFetchInProgress] = useState(false);\n\n    const handleUpload = (songName, selectedFile) => {\n        setFetchInProgress(true);\n        Promise.resolve(addSongPost(props.playlistName, props.playlistID, songName, selectedFile))\n            .then((result) => props.parentCallback(result))\n            .then(() => {\n                setFetchInProgress(false);\n            });\n    }\n\n    const deletePlaylist = () => {\n        const cookies = new Cookies();\n        Promise.resolve(deletePlaylistPost(props.playlistID)).then((result) => {\n            props.songCollection.map((song) => {\n                if (song._id === cookies.get('songID')) {\n                    props.updateCurrentSong(undefined, undefined);\n                }\n            })\n            props.parentCallback(result)\n        });\n    }\n\n    const songs = (songCollection) => songCollection.map((song) => {\n        return (\n            <Accordion.Collapse eventKey=\"0\" key={song._id}>\n                <Song\n                    playlistID={props.playlistID}\n                    playlistName={props.playlistName}\n                    songName={song.songName}\n                    songID={song._id}\n                    parentCallback={props.parentCallback}\n                    updateCurrentSong={\n                        props.updateCurrentSong\n                    }\n                >\n                </Song>\n            </Accordion.Collapse>\n        )\n    });\n\n    return (\n        <>\n            { fetchInProgress && (<div className=\"d-flex justify-content-center\">\n                <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>)}\n            { !fetchInProgress && (<Accordion>\n                <div className=\"row\">\n                    <a className=\"dropdown-toggle\"\n                        data-toggle=\"dropdown\"\n                        aria-expanded=\"false\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-collection-play-fill\" viewBox=\"0 0 16 16\">\n                            <path d=\"M2.5 3.5a.5.5 0 0 1 0-1h11a.5.5 0 0 1 0 1h-11zm2-2a.5.5 0 0 1 0-1h7a.5.5 0 0 1 0 1h-7zM0 13a1.5 1.5 0 0 0 1.5 1.5h13A1.5 1.5 0 0 0 16 13V6a1.5 1.5 0 0 0-1.5-1.5h-13A1.5 1.5 0 0 0 0 6v7zm6.258-6.437a.5.5 0 0 1 .507.013l4 2.5a.5.5 0 0 1 0 .848l-4 2.5A.5.5 0 0 1 6 12V7a.5.5 0 0 1 .258-.437z\" />\n                        </svg>\n                    </a>\n                    <div className=\"dropdown-menu\">\n                        <UploadDialog id=\"add-song\" parentCallback={handleUpload} />\n                        <a className=\"dropdown-item\" onClick={deletePlaylist}>Delete this playlist</a>\n                    </div>\n                    <Accordion.Toggle className=\"btn btn-dark flex-grow-1\" as={Button} eventKey=\"0\">\n                        {props.playlistName}\n                    </Accordion.Toggle>\n                </div>\n                {songs(props.songCollection)}\n            </Accordion>)}\n        </>\n    )\n}\n\nexport default Playlist;","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nconst CreatePlaylistDialog = (props) => {\n    const [open, setOpen] = useState(false);\n    const [playlistName, setPlaylistName] = useState(\"\");\n\n    const handleDialogOpen = () => {\n        setOpen(true);\n    }\n\n    const handleDialogClose = () => {\n        setOpen(false);\n        setPlaylistName(\"\");\n    }\n\n    const handleSubmit = (event) => {\n        if (playlistName !== \"\") {\n            props.parentCallback(playlistName);\n            setOpen(false);\n            setPlaylistName(\"\");\n        } else {\n            alert(\"Your didn't give your playlist any name\");\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setPlaylistName(event.target.value);\n    }\n\n    return (\n        <>\n            <button type=\"button\" class=\"btn btn-outline-dark\" onClick={handleDialogOpen}>\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"26\"\n                    height=\"26\"\n                    fill=\"currentColor\"\n                    className=\"bi bi-plus\"\n                    viewBox=\"0 0 16 16\"\n                >\n                    <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n                </svg>\n                Add a new playlist\n            </button>\n\n            <Modal show={open} onHide={handleDialogClose} animation={false}>\n                <Modal.Header closeButton>\n                    Add a playlist\n                </Modal.Header>\n                <Modal.Body>\n                    <form>\n                        <div className=\"form-group text-left\">\n                            <label >Playlist</label>\n                            <input type=\"playlist\"\n                                className=\"form-control\"\n                                id=\"playlist\"\n                                aria-describedby=\"playlist\"\n                                placeholder=\"Enter playlist name\"\n                                value={playlistName}\n                                onChange={handleNameChange}\n                            />\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        onClick={handleSubmit}\n                    >Submit</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default CreatePlaylistDialog;","import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport Playlist from './Playlist';\nimport CreatePlaylistDialog from './Dialogs/CreatePlaylistDialog'\nimport { addPlaylistPost, loadMusicCollectionGet } from '../utils/network.js';\n\n\nconst MusicCollection = (props) => {\n    const [user, setUser] = useState({ musicCollection: [] });\n\n    useEffect(() => {\n        Promise.resolve(loadMusicCollectionGet()).then((user) => {\n            setUser(user);\n        })\n    }, []);\n\n    const onChangePlaylists = (playlistName) => {\n        Promise.resolve()\n            .then(addPlaylistPost(playlistName).then(user => {\n                setUser(user);\n            }));\n    }\n\n    const onSongChange = (user) => {\n        setUser(user);\n    }\n\n    const listOfPlaylists = (user) => {\n        return user['musicCollection'].map((playlist) => {\n            return (\n                <div key={playlist._id} className=\"col-md-12\">\n                    <Playlist\n                        playlistName={playlist.name}\n                        playlistID={playlist._id}\n                        songCollection={playlist.songList ? playlist.songList : []}\n                        parentCallback={onSongChange}\n                        updateCurrentSong={props.updateCurrentSong}\n                    >\n                    </Playlist>\n                </div>\n            )\n        })\n    }\n\n    return (\n        <section id = \"library\" className=\"flex-fill\">\n            <CreatePlaylistDialog parentCallback={onChangePlaylists} />\n            { listOfPlaylists(user) }\n        </section>\n    )\n}\n\nexport default MusicCollection;","import React from 'react';\nimport '../App.css';\nimport { API_BASE_URL } from '../constants/apiConstants'\n\n//https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/getFloatFrequencyData\nclass Player extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        }\n        this.analyserNode = null;\n        this.dataArray = null;\n        this.bufferLength = null;\n        this.onTimeUpdateHandler = this.onTimeUpdateHandler.bind(this);\n        this.onAudioLoad = this.onAudioLoad.bind(this);\n    }\n\n    componentDidMount() {\n        this.canvas = document.getElementById('visualizer');\n        this.canvasCtx = this.canvas.getContext('2d');\n        this.onAudioLoad();\n        this.onTimeUpdateHandler();\n    }\n\n    onAudioLoad = () => {\n        try {\n            const audioCtx = new AudioContext();\n            var audio = document.getElementById('track');\n            const audioSourceNode = audioCtx.createMediaElementSource(audio);\n\n            this.analyserNode = audioCtx.createAnalyser();\n            this.analyserNode.fftSize = 1024;\n            this.bufferLength = this.analyserNode.frequencyBinCount;\n            this.dataArray = new Float32Array(this.bufferLength);\n\n            audioSourceNode.connect(this.analyserNode);\n            this.analyserNode.connect(audioCtx.destination);\n        } catch (error) {\n        }\n    }\n\n    onTimeUpdateHandler = () => {\n        try {\n            //Schedule next redraw\n            requestAnimationFrame(this.onTimeUpdateHandler);\n\n            //Get spectrum data\n            this.analyserNode.getFloatFrequencyData(this.dataArray);\n\n            //Draw black background\n            this.canvasCtx.fillStyle = 'Gainsboro';\n            this.canvasCtx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n            //Draw spectrum\n            const barWidth = (this.canvas.width / this.bufferLength) * 2.5;\n            let posX = 0;\n            for (let i = 0; i < this.bufferLength; i++) {\n                const barHeight = (this.dataArray[i] + 140) * 2;\n                this.canvasCtx.fillStyle = 'chocolate';\n                this.canvasCtx.fillRect(posX, this.canvas.height - barHeight / 2, barWidth, barHeight / 2);\n                posX += barWidth + 1;\n            }\n        } catch (error) {\n        }\n    }\n\n    render() {\n        return (\n            <div id = \"player\" class=\"card flex-fill\">\n                <canvas id=\"visualizer\" />\n                    <h5 class=\"card-title\">{this.props.currentSongName}</h5>\n                    <audio\n                        id=\"track\"\n                        controls\n                        crossorigin=\"anonymous\"\n                        src={API_BASE_URL + '/media/getSongFile?songID=' + this.props.currentSongID}>\n                        Your browser does not support the\n                            <code>audio</code> element.\n                         </audio>\n            </div>\n        )\n    }\n}\n\nexport default Player;","import React from 'react';\nimport { Redirect, Route } from \"react-router-dom\";\nimport { ACCESS_TOKEN_NAME } from '../constants/apiConstants';\n\nfunction PrivateRoute({ children, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={() =>\n          localStorage.getItem(ACCESS_TOKEN_NAME) ? (\n            children\n          ) : null\n        }\n      />\n    );\n  }\nexport default PrivateRoute;","import { useState } from 'react';\nimport Cookies from 'universal-cookie';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport CookieConsent from \"react-cookie-consent\";\n\nimport Header from './components/Header';\nimport LoginForm from './components/Dialogs/LoginForm';\nimport RegistrationForm from './components/Dialogs/RegistrationForm';\nimport MusicCollection from './components/MusicCollection';\nimport Player from './components/Player';\nimport PrivateRoute from './utils/PrivateRoute';\n\nconst App = () => {\n  const cookies = new Cookies();\n  const [currentSongID, setCurrentSongID] = useState(cookies.get('songID'));\n  const [currentSongName, setCurrentSongName] = useState(cookies.get('songName'));\n\n  var updateCurrentSong = (songName, songID) => {\n    setCurrentSongID(songID);\n    setCurrentSongName(songName);\n    if (songID) {\n      cookies.set('songName', songName, { path: '/', secure: true });\n      cookies.set('songID', songID, { path: '/', secure: true });\n    } else {\n      cookies.remove('songName', songName, { path: '/', secure: true });\n      cookies.remove('songID', songID, { path: '/', secure: true });\n    }\n  }\n\n  return (\n    <main id = \"box\" className=\"container\">\n      <Router>\n        <div className=\"row justify-content-md-center\">\n          <Header />\n        </div>\n        <Switch>\n          <Route path=\"/register\">\n            <RegistrationForm />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm />\n          </Route>\n          <PrivateRoute path=\"/\">\n            <div className=\"row justify-content-md-center bg-light\">\n              <MusicCollection updateCurrentSong={updateCurrentSong} />\n            </div>\n            <div className=\"row justify-content-md-center bg-light\">\n              {currentSongID && (<Player\n                currentSongName={currentSongName}\n                currentSongID={currentSongID}\n              />)}\n            </div>\n          </PrivateRoute>\n        </Switch>\n      </Router>\n      <CookieConsent>This site uses cookies.</CookieConsent>\n    </main >\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}