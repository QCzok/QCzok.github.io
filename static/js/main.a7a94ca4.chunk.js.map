{"version":3,"sources":["constants/apiConstants.js","utils/network.js","components/Header.js","components/Dialogs/LoginForm.js","components/Dialogs/RegistrationForm.js","components/Dialogs/UploadDialog.js","components/Song.js","components/Playlist.js","components/Dialogs/CreatePlaylistDialog.js","components/MusicCollection.js","components/visualizer/Box.js","components/visualizer/Sphere.js","components/visualizer/draw.js","components/Player.js","utils/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["API_BASE_URL","ACCESS_TOKEN_NAME","addSongPost","playlistName","playlistID","songName","selectedFile","a","data","FormData","append","axios","post","headers","localStorage","getItem","then","response","status","affected","catch","error","console","log","deleteSongPost","songID","delete","addPlaylistPost","name","deletePlaylistPost","loadMusicCollectionGet","get","res","registrationToServerPost","payload","isOk","message","loginPost","deleteUser","withRouter","props","className","data-toggle","aria-haspopup","aria-expanded","xmlns","width","height","fill","viewBox","d","aria-labelledby","onClick","removeItem","history","push","Promise","resolve","cookies","Cookies","remove","path","secure","window","location","reload","href","useState","email","password","successMessage","errorMessage","state","setState","handleChange","e","target","id","value","prevState","handleSubmitClick","preventDefault","setItem","redirectToHome","alert","Modal","show","onHide","animation","Header","closeButton","Body","onSubmit","type","aria-describedby","placeholder","onChange","Button","Footer","role","confirmPassword","onSend","sendDetailsToServer","length","disabled","UploadDialog","open","setOpen","setSongName","setSelectedFile","handleDialogSubmit","event","parentCallback","Fragment","Form","Group","File","files","accept","Song","result","updateCurrentSong","undefined","Playlist","songCollection","fetchInProgress","setFetchInProgress","Accordion","map","song","_id","Toggle","as","eventKey","Collapse","CreatePlaylistDialog","setPlaylistName","handleSubmit","MusicCollection","musicCollection","user","setUser","useEffect","onSongChange","playlist","songList","listOfPlaylists","Box","mesh","useRef","position","ref","scale","args","color","Sphere","rotation","volume","attach","transparent","roughness","metalness","myArray","Array","from","keys","normalize","val","max","min","FillLight","brightness","intensity","lookAt","penumbra","castShadow","RimLight","GroundPlane","receiveShadow","BackDrop","drawVisualizationOne","canvas","bufferLength","dataArray","ctx","barWidth","posX","i","barHeight","fillStyle","fillRect","drawVisualizationSecond","ReactDOM","render","person","index","document","getElementById","drawVisualizationThird","avg","reduce","b","draw","Player","onAudioLoad","isPlaying","audioCtx","analyserNode","AudioContext","audio","audioSourceNode","createMediaElementSource","createAnalyser","fftSize","frequencyBinCount","Float32Array","connect","destination","onTimeUpdateHandler","requestAnimationFrame","getFloatFrequencyData","canvasCtx","clearRect","visualization","bind","this","getContext","currentSongID","src","currentSongName","onPlay","onPause","controls","crossOrigin","React","Component","setCurrentSongID","setCurrentSongName","login","register","set","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.a7a94ca4.chunk.js","sourcesContent":["export const API_BASE_URL = 'https://soundtrackbox.herokuapp.com';\n//export const API_BASE_URL = 'http://localhost:3001'\nexport const ACCESS_TOKEN_NAME = 'login_access_token';\nexport const CURRENT_SONG_NAME = null;\nexport const CURRENT_SONG_ID = null;","import axios from 'axios';\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from '../constants/apiConstants';\n\n//https://reactjs.org/docs/code-splitting.html\nexport const addSongPost = async (playlistName, playlistID, songName, selectedFile) => {\n\n    const data = new FormData()\n    data.append('playlistName', playlistName);\n    data.append('playlistID', playlistID);\n    data.append('songName', songName);\n    data.append('track', selectedFile);\n\n    return axios.post(API_BASE_URL + '/media/addSong', data, { headers: { \"auth-token\": localStorage.getItem(ACCESS_TOKEN_NAME) } })\n        .then(function (response) {\n            if (response.status === 200) {\n                return response.data.affected;\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n}\n\nexport const deleteSongPost = async (playlistID, songID) => {\n    return axios.delete(API_BASE_URL + '/media/deleteSong', { headers: { \"auth-token\": localStorage.getItem(ACCESS_TOKEN_NAME), playlistID: playlistID, songID: songID } })\n        .then(function (response) {\n            if (response.status === 200) {\n                return response.data.affected;\n            }\n        }\n        )\n        .catch(function (error) {\n            console.log(error);\n        })\n}\n\nexport const addPlaylistPost = async (playlistName) => {\n    return axios.post(API_BASE_URL + '/media/addPlaylist', { name: playlistName }, { headers: { \"auth-token\": localStorage.getItem(ACCESS_TOKEN_NAME) } })\n        .then(function (response) {\n            if (response.status === 200) {\n                return response.data.affected;\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n}\n\nexport const deletePlaylistPost = async (playlistID) => {\n    return axios.delete(API_BASE_URL + '/media/deletePlaylist', { headers: { \"auth-token\": localStorage.getItem(ACCESS_TOKEN_NAME), playlistID: playlistID } })\n        .then(function (response) {\n            if (response.status === 200) {\n                return response.data.affected;\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n}\n\nexport const loadMusicCollectionGet = async () => {\n    var data = axios.get(API_BASE_URL + '/media/loadMusicCollection', { headers: { \"auth-token\": localStorage.getItem(ACCESS_TOKEN_NAME) } })\n        .then(res => { return res.data }).catch(function (error) {\n            console.log(error);\n        })\n    return data;\n}\n\nexport const registrationToServerPost = async (payload) => {\n    return axios.post(API_BASE_URL + '/user/register', payload)\n        .then((response) => {\n            if (response.status === 200) {\n                return { isOk: true, message: \"\" };\n            } else {\n                return { isOk: false, message: response.data };\n            }\n        })\n        .catch(function (error) {\n            return { isOk: false, message: error.response.data };\n        });\n}\n\nexport const loginPost = async (payload) => {\n    return axios.post(API_BASE_URL + '/user/login', payload)\n        .then(response => {\n            return response;\n        })\n        .catch(error => {\n            throw(error);\n        });\n}\n\nexport const deleteUser = async () => {\n    return axios.delete(API_BASE_URL + '/user/deleteUser', { headers: { \"auth-token\": localStorage.getItem(ACCESS_TOKEN_NAME) } })\n        .catch(function (error) {\n            console.log(error);\n        })\n}","import { withRouter } from \"react-router-dom\";\nimport { ACCESS_TOKEN_NAME } from '../constants/apiConstants';\nimport { deleteUser } from '../utils/network.js';\nimport Cookies from 'universal-cookie';\n\nconst Header = (props) => {\n\n    const onSelection = () => {\n        if (localStorage.getItem(ACCESS_TOKEN_NAME)) {\n            localStorage.removeItem(ACCESS_TOKEN_NAME);\n            props.history.push('/');\n        } else {\n            props.history.push('/login');\n        }\n    }\n\n    const onAccountDeletion = () => {\n        Promise.resolve(deleteUser(props.playlistID)).then(() => {\n            localStorage.removeItem(ACCESS_TOKEN_NAME);\n            const cookies = new Cookies();\n            cookies.remove('songName', { path: '/', secure: true });\n            cookies.remove('songID', { path: '/', secure: true });\n            window.location.reload();\n        }\n        );\n    }\n\n    return (\n        <nav className=\"navbar text-white bg-dark flex-fill\">\n            <div className=\"nav-item dropdown\">\n                <a className=\"dropdown-toggle\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"26\" height=\"26\"\n                        fill={localStorage.getItem(ACCESS_TOKEN_NAME) ? \"orange\" : \"currentColor\"}\n                        className=\"bi bi-file-person-fill\"\n                        viewBox=\"0 0 16 16\">\n                        <path d=\"M12 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm-1 7a3 3 0 1 1-6 0 3 3 0 0 1 6 0zm-3 4c2.623 0 4.146.826 5 1.755V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-1.245C3.854 11.825 5.377 11 8 11z\" />\n                    </svg>\n                </a>\n                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                    <a className=\"dropdown-item\" onClick={onSelection}>{localStorage.getItem(ACCESS_TOKEN_NAME) ? 'Logout' : 'Login'}</a>\n                    <a className={localStorage.getItem(ACCESS_TOKEN_NAME) ? 'dropdown-item' : ''} onClick={onAccountDeletion} href=\"#\">{localStorage.getItem(ACCESS_TOKEN_NAME) ? 'Delete account' : ''}</a>\n                </div>\n            </div>\n            <h5>Sound Track Box</h5>\n        </nav>\n    );\n}\n\nexport default withRouter(Header);","import React, { useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nimport { ACCESS_TOKEN_NAME } from '../../constants/apiConstants';\nimport { loginPost } from '../../utils/network.js';\n\nfunction LoginForm(props) {\n    const [state, setState] = useState({\n        email: \"\",\n        password: \"\",\n        successMessage: null,\n        errorMessage: null,\n    })\n\n    const handleChange = (e) => {\n        const { id, value } = e.target\n        setState(prevState => ({\n            ...prevState,\n            [id]: value\n        }))\n    }\n\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        const payload = {\n            \"email\": state.email,\n            \"password\": state.password,\n        }\n\n        Promise.resolve(loginPost(payload))\n        .then((response) => {\n            if (response.status < 400) {\n                setState(prevState => ({\n                    ...prevState,\n                    'successMessage': 'Login successful. Redirecting to home page..'\n                }))\n                localStorage.setItem(ACCESS_TOKEN_NAME, response.data);\n                redirectToHome();\n            }\n            else {\n                setState(prevState => ({\n                    ...prevState,\n                    'errorMessage': response.data,\n                }))\n            }\n        })\n        .catch((error) => {\n            if (!error.response) {\n                alert('NETWORK ERROR');\n            } else {\n                setState(prevState => ({\n                    ...prevState,\n                    'errorMessage': error.response.data\n                }))\n            }\n        });\n    }\n\n    const redirectToHome = () => {\n        props.history.push('/');\n    }\n    const redirectToRegister = () => {\n        props.history.push('/register');\n    }\n    return (\n        <Modal show={true} onHide={() => redirectToHome()} animation={false}>\n            <Modal.Header closeButton>\n                Login\n                </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleSubmitClick}>\n                    <div className=\"form-group text-left\">\n                        <label >Email address</label>\n                        <input type=\"email\"\n                            className=\"form-control\"\n                            id=\"email\"\n                            aria-describedby=\"emailHelp\"\n                            placeholder=\"Enter email\"\n                            value={state.email}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"form-group text-left\">\n                        <label>Password</label>\n                        <input type=\"password\"\n                            className=\"form-control\"\n                            id=\"password\"\n                            placeholder=\"Password\"\n                            value={state.password}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"form-check\">\n                    </div>\n                </form>\n                <Button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                    onClick={handleSubmitClick}\n                >Submit</Button>\n            </Modal.Body>\n            <Modal.Footer>\n                <section className=\"registerMessage\">\n                    <span>Dont have an account? </span>\n                    <button className=\"btn btn-primary\" onClick={() => redirectToRegister()}>Register</button>\n                </section>\n                <section className={state.errorMessage ? \"alert alert-danger\": \"\"} role=\"alert\">\n                {state.errorMessage}\n                </section>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default withRouter(LoginForm);","import React, { useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Modal from 'react-bootstrap/Modal';\nimport { registrationToServerPost } from '../../utils/network.js';\n\nconst RegistrationForm = (props) => {\n    const [state, setState] = useState({\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        errorMessage: null,\n        successMessage: null,\n        onSend: false,\n    })\n    const handleChange = (e) => {\n        const { id, value } = e.target\n        setState(prevState => ({\n            ...prevState,\n            [id]: value\n        }))\n    }\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        if (state.password === state.confirmPassword) {\n            setState(prevState => ({\n                ...prevState,\n                'onSend': true,\n            }));\n            Promise.resolve()\n                .then(sendDetailsToServer)\n                .catch(error => console.log(error));\n        } else {\n            setState(prevState => ({\n                ...prevState,\n                'errorMessage': 'Passwords do not match'\n            }))\n        }\n    }\n\n    const redirectToHome = () => {\n        props.history.push('/home');\n    }\n\n    const redirectToLogin = () => {\n        props.history.push('/login');\n    }\n\n    const sendDetailsToServer = () => {\n        if (state.email.length && state.password.length) {\n            const payload = {\n                \"email\": state.email,\n                \"password\": state.password,\n            }\n            Promise.resolve(registrationToServerPost(payload)).then((response) => {\n                if (response.isOk) {\n                    setState(prevState => ({\n                        ...prevState,\n                        'successMessage': \"You have successfully registered. We just sent you a confirmation email. Check your email account to finish the registration process and access your free trial period. If you don't receive it in a few minutes, check your spam folder.\",\n                        'errorMessage': null,\n                    }))\n                } else {\n                    setState(prevState => ({\n                        ...prevState,\n                        'errorMessage': response.message,\n                        'successMessage': null,\n                        'onSend': false,\n                    }))\n                }\n            })\n        } else {\n            setState(prevState => ({\n                ...prevState,\n                'errorMessage': 'Please enter valid username and password',\n                'successMessage': null,\n            }))\n        }\n    }\n\n    return (\n        <div>\n            <Modal show={true} onHide={redirectToHome} animation={false}>\n                <Modal.Header closeButton>\n                    Register\n                </Modal.Header>\n                <Modal.Body>\n                    <form>\n                        <div className=\"form-group text-left\">\n                            <label>Email address</label>\n                            <input type=\"email\"\n                                className=\"form-control\"\n                                id=\"email\"\n                                aria-describedby=\"emailHelp\"\n                                placeholder=\"Enter email\"\n                                value={state.email}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"form-group text-left\">\n                            <label>Password</label>\n                            <input type=\"password\"\n                                className=\"form-control\"\n                                id=\"password\"\n                                placeholder=\"Password\"\n                                value={state.password}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"form-group text-left\">\n                            <label>Confirm Password</label>\n                            <input type=\"password\"\n                                className=\"form-control\"\n                                id=\"confirmPassword\"\n                                placeholder=\"Confirm Password\"\n                                value={state.confirmPassword}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary\"\n                            onClick={handleSubmitClick}\n                            disabled={state.onSend ? \"true\" : \"\"}\n                        >\n                            Register\n                </button>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <div className=\"mt-2\">\n                        <span>Already have an account? </span>\n                        <button className=\"btn btn-primary\" onClick={redirectToLogin}>Login here</button>\n                    </div>\n                    <section className={state.errorMessage ? \"alert alert-danger\" : \"\"} role=\"alert\">\n                        {state.errorMessage}\n                    </section>\n                    <section className={state.successMessage ? \"alert alert-success\" : \"\"} role=\"alert\">\n                        {state.successMessage}\n                    </section>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default withRouter(RegistrationForm);","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst UploadDialog = (props) => {\n  const [open, setOpen] = useState(false);\n  const [songName, setSongName] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleNameChange = (event) => {\n    setSongName(event.target.value)\n  };\n\n  const handleDialogOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setOpen(false);\n    setSongName(\"\");\n  };\n\n  const handleDialogSubmit = (event) => {\n    event.preventDefault();\n    if (songName !== \"\") {\n      props.parentCallback(songName, selectedFile);\n      setOpen(false);\n      setSongName(\"\");\n    } else {\n      alert(\"You didn't give your song any name\");\n    }\n  };\n\n  const onFileUpload = (event) => {\n    setSelectedFile(event.target.files[0]);\n  }\n\n  return (\n    <React.Fragment>\n      <a className=\"dropdown-item\" onClick={handleDialogOpen}>Add a song</a>\n\n      <Modal show={open} onHide={handleDialogClose} animation={false}>\n        <Modal.Header closeButton>\n          Upload a Song\n        </Modal.Header>\n        <Modal.Body>\n          <form onSubmit={handleDialogSubmit}>\n            <Form.Group>\n              <Form.File onChange={onFileUpload} accept=\".mp3,audio/*\" />\n            </Form.Group>\n            <div className=\"form-group text-left\">\n              <label >Song name</label>\n              <input type=\"song-name\"\n                className=\"form-control\"\n                id=\"playlist\"\n                aria-describedby=\"song name\"\n                placeholder=\"Enter a song name\"\n                value={songName}\n                onChange={handleNameChange}\n              />\n            </div>\n          </form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={handleDialogSubmit}\n          >Submit</Button>\n        </Modal.Footer>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nexport default UploadDialog","import React from 'react';\nimport Cookies from 'universal-cookie';\nimport { deleteSongPost } from '../utils/network.js';\n\nconst Song = (props) => {\n\n    const deleteSong = () => {\n        const cookies = new Cookies();\n        Promise.resolve(deleteSongPost(props.playlistID, props.songID)).then((result) => props.parentCallback(result));\n        if (cookies.get('songID') === props.songID) {\n            props.updateCurrentSong(undefined, undefined);\n        }\n    }\n\n    const handleOnClick = () => {\n        props.updateCurrentSong(props.songName, props.songID)\n    }\n\n        return (\n            <div className=\"row\">\n                <div id=\"delete-song\" className=\"nav-item dropdown\">\n                    <a className=\"dropdown-toggle\"\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-file-music-fill\" viewBox=\"0 0 16 16\">\n                            <path d=\"M12 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm-.5 4.11v1.8l-2.5.5v5.09c0 .495-.301.883-.662 1.123C7.974 12.866 7.499 13 7 13c-.5 0-.974-.134-1.338-.377-.36-.24-.662-.628-.662-1.123s.301-.883.662-1.123C6.026 10.134 6.501 10 7 10c.356 0 .7.068 1 .196V4.41a1 1 0 0 1 .804-.98l1.5-.3a1 1 0 0 1 1.196.98z\" />\n                        </svg>\n                    </a>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                        <a className=\"dropdown-item\" onClick={deleteSong}>Delete this song</a>\n                    </div>\n                </div>\n                <button className=\"btn flex-fill\" onClick={handleOnClick}>{props.songName}</button>\n            </div>\n        );\n}\n\nexport default Song;","import React, { useState } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport Cookies from 'universal-cookie';\n\nimport UploadDialog from './Dialogs/UploadDialog';\nimport Song from './Song';\nimport { addSongPost, deletePlaylistPost } from '../utils/network.js';\n\n\nconst Playlist = (props) => {\n    const [fetchInProgress, setFetchInProgress] = useState(false);\n\n    const handleUpload = (songName, selectedFile) => {\n        setFetchInProgress(true);\n        Promise.resolve(addSongPost(props.playlistName, props.playlistID, songName, selectedFile))\n            .then((result) => props.parentCallback(result))\n            .then(() => {\n                setFetchInProgress(false);\n            });\n    }\n\n    const deletePlaylist = () => {\n        const cookies = new Cookies();\n        Promise.resolve(deletePlaylistPost(props.playlistID)).then((result) => {\n            props.songCollection.map((song) => {\n                if (song._id === cookies.get('songID')) {\n                    props.updateCurrentSong(undefined, undefined);\n                }\n            })\n            props.parentCallback(result)\n        });\n    }\n\n    const songs = (songCollection) => songCollection.map((song) => {\n        return (\n            <Accordion.Collapse eventKey=\"0\" key={song._id}>\n                <Song\n                    playlistID={props.playlistID}\n                    playlistName={props.playlistName}\n                    songName={song.songName}\n                    songID={song._id}\n                    parentCallback={props.parentCallback}\n                    updateCurrentSong={\n                        props.updateCurrentSong\n                    }\n                >\n                </Song>\n            </Accordion.Collapse>\n        )\n    });\n\n    return (\n        <>\n            { fetchInProgress && (<div className=\"d-flex justify-content-center\">\n                <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>)}\n            { !fetchInProgress && (<Accordion>\n                <div className=\"row\">\n                    <a className=\"dropdown-toggle\"\n                        data-toggle=\"dropdown\"\n                        aria-expanded=\"false\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-collection-play-fill\" viewBox=\"0 0 16 16\">\n                            <path d=\"M2.5 3.5a.5.5 0 0 1 0-1h11a.5.5 0 0 1 0 1h-11zm2-2a.5.5 0 0 1 0-1h7a.5.5 0 0 1 0 1h-7zM0 13a1.5 1.5 0 0 0 1.5 1.5h13A1.5 1.5 0 0 0 16 13V6a1.5 1.5 0 0 0-1.5-1.5h-13A1.5 1.5 0 0 0 0 6v7zm6.258-6.437a.5.5 0 0 1 .507.013l4 2.5a.5.5 0 0 1 0 .848l-4 2.5A.5.5 0 0 1 6 12V7a.5.5 0 0 1 .258-.437z\" />\n                        </svg>\n                    </a>\n                    <div className=\"dropdown-menu\">\n                        <UploadDialog id=\"add-song\" parentCallback={handleUpload} />\n                        <a className=\"dropdown-item\" onClick={deletePlaylist}>Delete this playlist</a>\n                    </div>\n                    <Accordion.Toggle className=\"btn btn-dark flex-grow-1\" as={Button} eventKey=\"0\">\n                        {props.playlistName}\n                    </Accordion.Toggle>\n                </div>\n                {songs(props.songCollection)}\n            </Accordion>)}\n        </>\n    )\n}\n\nexport default Playlist;","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nconst CreatePlaylistDialog = (props) => {\n    const [open, setOpen] = useState(false);\n    const [playlistName, setPlaylistName] = useState(\"\");\n\n    const handleDialogOpen = () => {\n        setOpen(true);\n    }\n\n    const handleDialogClose = () => {\n        setOpen(false);\n        setPlaylistName(\"\");\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (playlistName !== \"\") {\n            props.parentCallback(playlistName);\n            setOpen(false);\n            setPlaylistName(\"\");\n        } else {\n            alert(\"Your didn't give your playlist any name\");\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setPlaylistName(event.target.value);\n    }\n\n    return (\n        <>\n            <button type=\"button\" className=\"btn btn-outline-dark\" onClick={handleDialogOpen}>\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"26\"\n                    height=\"26\"\n                    fill=\"currentColor\"\n                    className=\"bi bi-plus\"\n                    viewBox=\"0 0 16 16\"\n                >\n                    <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n                </svg>\n                Add a new playlist\n            </button>\n\n            <Modal show={open} onHide={handleDialogClose} animation={false}>\n                <Modal.Header closeButton>\n                    Add a playlist\n                </Modal.Header>\n                <Modal.Body>\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"form-group text-left\">\n                            <label >Playlist</label>\n                            <input type=\"playlist\"\n                                className=\"form-control\"\n                                id=\"playlist\"\n                                aria-describedby=\"playlist\"\n                                placeholder=\"Enter playlist name\"\n                                value={playlistName}\n                                onChange={handleNameChange}\n                            />\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        type=\"submit\"\n                        className=\"btn btn-primary\"\n                        onClick={handleSubmit}\n                    >Submit</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default CreatePlaylistDialog;","import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport Playlist from './Playlist';\nimport CreatePlaylistDialog from './Dialogs/CreatePlaylistDialog'\nimport { addPlaylistPost, loadMusicCollectionGet } from '../utils/network.js';\n\n\nconst MusicCollection = (props) => {\n    const [user, setUser] = useState({ musicCollection: [] });\n\n    useEffect(() => {\n        Promise.resolve(loadMusicCollectionGet()).then((user) => {\n            setUser(user);\n        })\n    }, []);\n\n    const onChangePlaylists = (playlistName) => {\n        Promise.resolve()\n            .then(addPlaylistPost(playlistName).then(user => {\n                setUser(user);\n            }));\n    }\n\n    const onSongChange = (user) => {\n        setUser(user);\n    }\n\n    const listOfPlaylists = (user) => {\n        try {\n            return user['musicCollection'].map((playlist) => {\n                return (\n                    <div key={playlist._id} className=\"col-md-12\">\n                        <Playlist\n                            playlistName={playlist.name}\n                            playlistID={playlist._id}\n                            songCollection={playlist.songList ? playlist.songList : []}\n                            parentCallback={onSongChange}\n                            updateCurrentSong={props.updateCurrentSong}\n                        >\n                        </Playlist>\n                    </div>\n                )\n            })\n        } catch (error) {\n            console.log(error);\n            return [];\n        }\n    }\n\n    return (\n        <section id = \"library\" className=\"flex-fill\">\n            <CreatePlaylistDialog parentCallback={onChangePlaylists} />\n            { listOfPlaylists(user) }\n        </section>\n    )\n}\n\nexport default MusicCollection;","import React, { useRef } from 'react'\n\nfunction Box(props) {\n    // This reference will give us direct access to the mesh\n    const mesh = useRef()\n    return (\n      <mesh\n        position={props.position}\n        ref={mesh}\n        scale={props.scale}>\n        <boxGeometry args={[1, 2, 3]} />\n        <meshStandardMaterial color={props.color} />\n      </mesh>\n    )\n  }\n\nexport default Box;","import React, { useRef } from 'react'\n\nfunction Sphere(props) {\n    return (\n        <mesh position={[0, 0, 0]} rotation={[0, 0, 0]} scale={props.volume}>\n            <sphereGeometry attach=\"geometry\" args={[1, 64, 64]} />\n            <meshStandardMaterial\n                attach=\"material\"\n                color=\"white\"\n                transparent\n                roughness={0.1}\n                metalness={0.1}\n            />\n        </mesh>\n    );\n}\n\nexport default Sphere;","import { Canvas } from '@react-three/fiber'\nimport Box from './Box';\nimport Sphere from './Sphere';\nimport '../../App.css';\nimport ReactDOM from 'react-dom'\n\nconst draw = (id, canvas, bufferLength, dataArray, ctx) => {\n\n    switch (id) {\n        case 1: drawVisualizationOne(canvas, bufferLength, dataArray, ctx); break;\n        case 2: drawVisualizationSecond(canvas, bufferLength, dataArray, ctx); break;\n        case 3: drawVisualizationThird(canvas, bufferLength, dataArray, ctx); break;\n        default: drawVisualizationOne(canvas, bufferLength, dataArray, ctx); break;\n    }\n}\n\nconst myArray = Array.from(Array(32).keys())\n\nconst normalize = (val, max, min) => { return (val - min) / (max - min); }\n\n\nfunction FillLight({ brightness, color }) {\n    return (\n        <rectAreaLight\n            width={3}\n            height={3}\n            intensity={brightness}\n            color={color}\n            position={[2, 1, 4]}\n            lookAt={[0, 0, 0]}\n            penumbra={2}\n            castShadow\n        />\n    );\n}\n\nfunction RimLight({ brightness, color }) {\n    return (\n        <rectAreaLight\n            width={2}\n            height={2}\n            intensity={brightness}\n            color={color}\n            position={[1, 4, -2]}\n            rotation={[0, 180, 0]}\n            castShadow\n        />\n    );\n}\n\n// Geometry\nfunction GroundPlane() {\n    return (\n      <mesh receiveShadow rotation={[5, 0, 0]} position={[0, -1, 0]}>\n        <planeBufferGeometry attach=\"geometry\" args={[500, 500]} />\n        <meshStandardMaterial attach=\"material\" color=\"white\" />\n      </mesh>\n    );\n  }\n  function BackDrop() {\n    return (\n      <mesh receiveShadow position={[0, -1, -5]}>\n        <planeBufferGeometry attach=\"geometry\" args={[500, 500]} />\n        <meshStandardMaterial attach=\"material\" color=\"white\" />\n      </mesh>\n    );\n  }\n\nconst drawVisualizationOne = (canvas, bufferLength, dataArray, ctx) => {\n    try {\n        if (canvas) {\n            const barWidth = (canvas.width / bufferLength) - 1;\n            let posX = 0;\n            for (let i = 0; i < bufferLength; i++) {\n                const barHeight = (dataArray[i] + 140) * 2;\n                ctx.fillStyle = 'chocolate';\n                ctx.fillRect(posX, canvas.height - barHeight / 2, barWidth, barHeight / 2);\n                posX += barWidth + 1;\n            }\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nconst drawVisualizationSecond = (canvas, bufferLength, dataArray, ctx) => {\n    try {\n        if (canvas) {\n            \n            ReactDOM.render(\n                <Canvas id=\"canvas\">\n                    <GroundPlane></GroundPlane>\n                    <BackDrop></BackDrop>\n                    <FillLight brightness={2.6} color={\"#bdefff\"} />\n                    <RimLight brightness={54} color={\"#fff\"} />\n                    <pointLight position={[10, 10, 10]} />\n\n                    {myArray.map((person, index) => (\n                        <Box key={index} position={[index/4, 0, 0]} scale={normalize(dataArray[index], -40, 40)} color={'hotpink'} />\n                    ))}\n                                        {myArray.map((person, index) => (\n                        <Box key={index} position={[-index/4, 0, 0]} scale={normalize(dataArray[index], -40, 40)} color={'orange'} />\n                    ))}\n                </Canvas>,\n                document.getElementById('container')\n            )\n            \n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nconst drawVisualizationThird = (canvas, bufferLength, dataArray, ctx) => {\n    try {\n        const sum = dataArray.reduce((a, b) => a + b, 0);\n        const avg = (sum / bufferLength) || 0;\n        if (canvas) {\n            ReactDOM.render(\n                <Canvas id=\"canvas\">\n                    <GroundPlane></GroundPlane>\n                    <BackDrop></BackDrop>\n                    <FillLight brightness={2.6} color={\"blue\"} />\n                    <RimLight brightness={54} color={\"red\"} />\n                    <pointLight position={[10, 10, 10]} />\n                    <Sphere volume={avg * -0.03}/>\n                </Canvas>,\n                document.getElementById('container'),\n            )\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport default draw;","import React from 'react';\nimport '../App.css';\nimport { API_BASE_URL } from '../constants/apiConstants'\nimport draw from './visualizer/draw';\n\n//https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/getFloatFrequencyData\nclass Player extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            visualization: 1,\n            isPlaying: false,\n        }\n        this.analyserNode = undefined;\n        this.dataArray = undefined;\n        this.bufferLength = undefined;\n        this.audioCtx = undefined;\n        this.onTimeUpdateHandler = this.onTimeUpdateHandler.bind(this);\n        this.onAudioLoad = this.onAudioLoad.bind(this);\n    }\n\n    componentDidMount() {\n        this.canvas = document.getElementById('visualizer');\n        this.canvasCtx = this.canvas.getContext('2d');\n    }\n\n    onAudioLoad = () => {\n        try {\n            this.setState({ isPlaying: true }, () => {\n                if (!this.audioCtx || !this.analyserNode) {\n                    this.audioCtx = new AudioContext();\n                    var audio = document.getElementById('track');\n                    const audioSourceNode = this.audioCtx.createMediaElementSource(audio);\n\n                    this.analyserNode = this.audioCtx.createAnalyser();\n                    this.analyserNode.fftSize = 32;\n                    this.bufferLength = this.analyserNode.frequencyBinCount;\n                    this.dataArray = new Float32Array(this.bufferLength);\n\n                    audioSourceNode.connect(this.analyserNode);\n                    this.analyserNode.connect(this.audioCtx.destination);\n                    this.onTimeUpdateHandler();\n                }\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    onTimeUpdateHandler = () => {\n        try {\n            //Schedule next redraw\n                requestAnimationFrame(this.onTimeUpdateHandler);\n                if (this.state.isPlaying) {\n\n                //Get spectrum data\n                this.analyserNode.getFloatFrequencyData(this.dataArray);\n\n                this.canvasCtx.fillStyle = 'Gainsboro';\n                this.canvasCtx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n                draw(this.state.visualization, this.canvas, this.bufferLength, this.dataArray, this.canvasCtx);\n            }\n        } catch (error) {\n            this.setState({ isPlaying: false });\n            console.log(error);\n        }\n    }\n\n    render() {\n        {\n            this.props.currentSongID ?\n                this.src = API_BASE_URL + '/media/getSongFile?songID=' + this.props.currentSongID :\n                this.src = \"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\n        }\n        return (\n            <div id=\"player\" className=\"card flex-fill\">\n                <canvas id={this.state.visualization === 1 ? \"visualizer\" : \"novisualizer\"} />\n                {this.state.visualization >1 && (<div id=\"container\"></div>)}\n                <h5 className=\"card-title\">{this.props.currentSongName}</h5>\n                <audio\n                    onPlay={this.onAudioLoad}\n                    onPause={() => { this.setState({ isPlaying: false }) }}\n                    id=\"track\"\n                    controls\n                    crossOrigin=\"anonymous\"\n                    src={this.src}>\n                    Your browser does not support the\n                            <code>audio</code> element.\n                         </audio>\n                <button onClick={() => this.setState({ visualization: 1 })}>Visualization 1</button>\n                <button onClick={() => this.setState({ visualization: 2 })}>Visualization 2</button>\n                <button onClick={() => this.setState({ visualization: 3 })}>Visualization 3</button>\n            </div>\n        )\n    }\n}\n\nexport default Player;","import { useState } from 'react';\nimport Cookies from 'universal-cookie';\nimport React from 'react';\nimport { Route } from \"react-router-dom\";\nimport { ACCESS_TOKEN_NAME } from '../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\nimport MusicCollection from '../components/MusicCollection';\nimport Player from '../components/Player';\n\nfunction PrivateRoute(props) {\n  const cookies = new Cookies();\n  const [currentSongID, setCurrentSongID] = useState(cookies.get('songID'));\n  const [currentSongName, setCurrentSongName] = useState(cookies.get('songName'));\n\n  const login = () => {\n    props.history.push('/login');\n  }\n\n  const register = () => {\n    props.history.push('/register');\n  }\n\n  var updateCurrentSong = (songName, songID) => {\n    setCurrentSongID(songID);\n    setCurrentSongName(songName);\n    if (songID) {\n      cookies.set('songName', songName, { path: '/', secure: true });\n      cookies.set('songID', songID, { path: '/', secure: true });\n    } else {\n      cookies.remove('songName', songName, { path: '/', secure: true });\n      cookies.remove('songID', songID, { path: '/', secure: true });\n    }\n  }\n\n    return (\n      <Route\n        render={() =>\n          localStorage.getItem(ACCESS_TOKEN_NAME) ? \n          <section>\n          <div className=\"row justify-content-md-center bg-light\">\n              <MusicCollection updateCurrentSong={updateCurrentSong} />\n            </div>\n            <div className=\"row justify-content-md-center bg-light\">\n              {currentSongID && (<Player\n                currentSongName={currentSongName}\n                currentSongID={currentSongID}\n              />)}\n            </div>\n            </section>\n             : \n             <section>\n             <h1>Welcome to Sound Track Box </h1>\n             <p>If you already have an account, log in now</p>\n             <div className=\"d-flex justify-content-center\">\n             <button className=\"btn btn-primary align-center\" onClick = {login}>Log in</button>\n             </div>\n             <p> if you don't have an account yet, register first</p>\n             <div className=\"d-flex justify-content-center\">\n             <button className=\"btn btn-primary\" onClick = {register}>Register</button>\n             </div>\n             <br/>\n             <p> ..or play around with the sample track </p>\n             <Player\n                currentSongName={\"Sample Track\"}\n                currentSongID={undefined}\n              />\n             </section>\n        }\n      />\n    );\n  }\nexport default withRouter(PrivateRoute);","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport CookieConsent from \"react-cookie-consent\";\n\nimport Header from './components/Header';\nimport LoginForm from './components/Dialogs/LoginForm';\nimport RegistrationForm from './components/Dialogs/RegistrationForm';\nimport PrivateRoute from './utils/PrivateRoute';\n\nconst App = () => {\n\n  return (\n    <main id = \"box\" className=\"container\">\n      <Router>\n        <div className=\"row justify-content-md-center\">\n          <Header />\n        </div>\n        <Switch>\n          <Route path=\"/register\">\n            <RegistrationForm />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm />\n          </Route>\n          <PrivateRoute path=\"/\">\n          </PrivateRoute>\n        </Switch>\n      </Router>\n      <CookieConsent>This site uses cookies.</CookieConsent>\n    </main >\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}